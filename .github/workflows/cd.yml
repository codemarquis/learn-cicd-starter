name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go toolchain
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      # Step 3: Install goose migration tool
      - name: Install goose
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      # Step 4: Build the app
      - name: Build production binary
        run: scripts/buildprod.sh

      # Step 5: Authenticate with GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Step 6: Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: notely-468408

      # Step 7: Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # Step 8: Build and push Docker image to Artifact Registry
      - name: Build and push Docker image
        run: |
          gcloud builds submit \
            --tag us-central1-docker.pkg.dev/notely-468408/notely-ar-repo/notely:latest .

      # Step 9: Run database migrations
      - name: Run database migrations
        run: ./scripts/migrateup.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # Step 10: Deploy to Cloud Run
      - name: Deploy to Cloud Run
  	run: |
    	 gcloud run deploy notely \
           --image us-central1-docker.pkg.dev/notely-468408/notely-ar-repo/notely:latest \
           --platform managed \
           --region us-central1 \
           --allow-unauthenticated \
           --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }},PORT=8080	
